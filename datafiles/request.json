ServerResponse {
  domain: null,
  _events: { finish: [Function: bound resOnFinish] },
  _eventsCount: 1,
  _maxListeners: undefined,
  output: [],
  outputEncodings: [],
  outputCallbacks: [],
  outputSize: 0,
  writable: true,
  _last: false,
  upgrading: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 1448,
        _externalStream: [External],
        fd: 15,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::1337',
        [Symbol(asyncId)]: 170 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::1337',
        [Symbol(asyncId)]: 170 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 3326,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Object],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _peername: { address: '::ffff:192.168.0.159', family: 'IPv6', port: 55818 },
     read: [Function],
     _consuming: true,
     _httpMessage: [Circular],
     [Symbol(asyncId)]: 258,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 259,
     [Symbol(triggerId)]: 170 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 1448,
        _externalStream: [External],
        fd: 15,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::1337',
        [Symbol(asyncId)]: 170 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6::::1337',
        [Symbol(asyncId)]: 170 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 3326,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Object],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     _peername: { address: '::ffff:192.168.0.159', family: 'IPv6', port: 55818 },
     read: [Function],
     _consuming: true,
     _httpMessage: [Circular],
     [Symbol(asyncId)]: 258,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 259,
     [Symbol(triggerId)]: 170 },
  _header: null,
  _onPendingData: [Function: bound updateOutgoingData],
  _sent100: false,
  _expect_continue: false,
  req: 
   IncomingMessage {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 933,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 3326,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _peername: [Object],
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 258,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 259,
        [Symbol(triggerId)]: 170 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 3326,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _peername: [Object],
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 258,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 259,
        [Symbol(triggerId)]: 170 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: false,
     headers: 
      { 'user-agent': 'Dalvik/2.1.0 (Linux; U; Android 7.0; LG-H850 Build/NRD90U) org.odk.collect.android/v1.9.1',
        'x-openrosa-version': '1.0',
        date: 'Wed, 23 Aug 2017 07:00:04 GMT+00:00',
        'content-length': '3649',
        'content-type': 'multipart/form-data; boundary=oH_UgjoiSngzFiCWc6E-l4y-ffDRe_T5',
        host: '192.168.0.185:1337',
        connection: 'Keep-Alive',
        cookie: 'sails.sid=s%3A5JorVT6Ba1t2wPfVwDGg0W8ntkFyj6un.sf5liY8PCibG0uRn69gO1ibQbB3EMU7hQI%2BGgr2N3ao',
        'accept-encoding': 'gzip,deflate' },
     rawHeaders: 
      [ 'User-Agent',
        'Dalvik/2.1.0 (Linux; U; Android 7.0; LG-H850 Build/NRD90U) org.odk.collect.android/v1.9.1',
        'X-OpenRosa-Version',
        '1.0',
        'Date',
        'Wed, 23 Aug 2017 07:00:04 GMT+00:00',
        'Content-Length',
        '3649',
        'Content-Type',
        'multipart/form-data; boundary=oH_UgjoiSngzFiCWc6E-l4y-ffDRe_T5',
        'Host',
        '192.168.0.185:1337',
        'Connection',
        'Keep-Alive',
        'Cookie',
        'sails.sid=s%3A5JorVT6Ba1t2wPfVwDGg0W8ntkFyj6un.sf5liY8PCibG0uRn69gO1ibQbB3EMU7hQI%2BGgr2N3ao',
        'Accept-Encoding',
        'gzip,deflate' ],
     trailers: {},
     rawTrailers: [],
     upgrade: false,
     url: '/submission?deviceID=imei%3A357657075118154',
     method: 'POST',
     statusCode: null,
     statusMessage: null,
     client: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 3326,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _peername: [Object],
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 258,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 259,
        [Symbol(triggerId)]: 170 },
     _consuming: false,
     _dumped: false,
     originalUrl: '/submission?deviceID=imei%3A357657075118154',
     _parsedUrl: 
      Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?deviceID=imei%3A357657075118154',
        query: 'deviceID=imei%3A357657075118154',
        pathname: '/submission',
        path: '/submission?deviceID=imei%3A357657075118154',
        href: '/submission?deviceID=imei%3A357657075118154',
        _raw: '/submission?deviceID=imei%3A357657075118154' },
     query: { deviceID: 'imei:357657075118154' },
     res: [Circular],
     next: [Function: next],
     _sails: 
      
     |>   [a lifted Sails app on port 1337]
      \___/  For help, see: http://sailsjs.org/documentation/concepts/
      
      Tip: Use `sails.config` to access your app's runtime configuration.
      
      3 Models:
      Forms,Submissions,Users
      
      3 Controllers:
      FormsController,SubmissionsController,UsersController
      
      20 Hooks:
      moduleloader,logger,request,orm,views,blueprints,responses,controllers,sockets,pubsub,policies,services,csrf,cors,i18n,userconfig,session,grunt,http,userhooks
      ,
     param: [Function: getValForParam],
     _startTime: 2017-08-23T07:00:03.718Z,
     secret: 'baa12c659475223c4ac2ad214c90073e',
     cookies: {},
     signedCookies: { 'sails.sid': '5JorVT6Ba1t2wPfVwDGg0W8ntkFyj6un' },
     _parsedOriginalUrl: 
      Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: '?deviceID=imei%3A357657075118154',
        query: 'deviceID=imei%3A357657075118154',
        pathname: '/submission',
        path: '/submission?deviceID=imei%3A357657075118154',
        href: '/submission?deviceID=imei%3A357657075118154',
        _raw: '/submission?deviceID=imei%3A357657075118154' },
     sessionStore: 
      MemoryStore {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        sessions: [Object],
        generate: [Function] },
     sessionID: '5JorVT6Ba1t2wPfVwDGg0W8ntkFyj6un',
     session: Session { cookie: [Object] } },
  locals: [Function: locals],
  writeHead: [Function: writeHead],
  end: [Function: end],
  [Symbol(outHeadersKey)]: null }